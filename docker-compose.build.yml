version: '3.4'
# COMPOSE_DOCKER_CLI_BUILD=1 docker-compose -f docker-compose.build.yml build
# docker-compose run --rm zerocodegenerator cg /cg-mysql-schema.sql cg_master_resource
services:
  api:
    image: crud_sandbox_api_1  # temp name only for schema.sql
    container_name: crud_sandbox_api_1
    build:
      context: .
      dockerfile: ./api/Dockerfile
      args:
        SCHEMA_SQL: ./cg-mysql-schema.sql
        #SCHEMA_DESC: cg_master_resource
        SCHEMA_DESC: ./onemany.crud.json
        MODULE_NAME: cg
    # ports: 
    #   - 8080:8080
    # volumes:
    #   - ./api/config/application-dev.yml:/webapps/config/application-dev.yml

  web:
    image: crud_sandbox_web_1  # temp name only for schema.sql
    container_name: crud_sandbox_web_1
    build:
      context: .
      dockerfile: ./web/Dockerfile.node
      args:
        TABLE_NAME: cg_master_resource
    ports:
      - 8000:8000
    volumes: 
      - ./out/web:/var/out
    command: 
      - /var/out
    depends_on: 
      - crudlessnetcore
      - crudlesscli
      - zeroelementpage
  crudlessnetcore:
    image: registry.docker.internal:5000/crudlessnetcore:latest
    build:
      context: ./tags/crudlessnetcore
    command: # override [dotnet]
      - /bin/sh      
  crudlesscli:
    image: registry.docker.internal:5000/crudlesscli:latest
    build:
      context: ./tags/crudlesscli
    command: # override [npm start]
      - sh
  zeroelementpage:
    image: registry.docker.internal:5000/zeroelementpage:latest
    build:
      context: ./tags/zeroelementpage
      dockerfile: ./Dockerfile.build
    command: # override [npm start]
      - sh
  # nodegateway:
  #   image: zelejs/nodegateway:latest
  #   container_name: nodegateway
  #   build:
  #     context: ./node-gateway
  #     dockerfile: ./Dockerfile
  #   environment:
  #     NODE_ENV: production    
  #   ports:
  #     - 8081:8080
  # nginx:
  #     container_name: crud_sandbox_api_gw
  #     privileged: true
  #     image: 'daocloud.io/library/nginx:latest'
  #     ports:
  #       - 8080:80
  #     volumes:
  #       - ./nginx/conf.d:/etc/nginx/conf.d
  #     depends_on:
  #       - api
  #       - web
  #       - nodegateway

#default
networks:
  default:
    name: sandbox_network
